invoke-direct {p0}, Ljava/lang/Object;-><init>()V
const/4 v0, -0x1
iput v0, p0, Lokhttp3/Response$Builder;->code:I
iget-object v0, p1, Lokhttp3/Response;->request:Lokhttp3/Request;
iput-object v0, p0, Lokhttp3/Response$Builder;->request:Lokhttp3/Request;
iget-object v0, p1, Lokhttp3/Response;->protocol:Lokhttp3/Protocol;
iput-object v0, p0, Lokhttp3/Response$Builder;->protocol:Lokhttp3/Protocol;
iget v0, p1, Lokhttp3/Response;->code:I
iput v0, p0, Lokhttp3/Response$Builder;->code:I
iget-object v0, p1, Lokhttp3/Response;->message:Ljava/lang/String;
iput-object v0, p0, Lokhttp3/Response$Builder;->message:Ljava/lang/String;
iget-object v0, p1, Lokhttp3/Response;->handshake:Lokhttp3/Handshake;
iput-object v0, p0, Lokhttp3/Response$Builder;->handshake:Lokhttp3/Handshake;
iget-object v0, p1, Lokhttp3/Response;->headers:Lokhttp3/Headers;
invoke-virtual {v0}, Lokhttp3/Headers;->newBuilder()Lokhttp3/Headers$Builder;
move-result-object v0
iput-object v0, p0, Lokhttp3/Response$Builder;->headers:Lokhttp3/Headers$Builder;
iget-object v0, p1, Lokhttp3/Response;->body:Lokhttp3/ResponseBody;
iput-object v0, p0, Lokhttp3/Response$Builder;->body:Lokhttp3/ResponseBody;
iget-object v0, p1, Lokhttp3/Response;->networkResponse:Lokhttp3/Response;
iput-object v0, p0, Lokhttp3/Response$Builder;->networkResponse:Lokhttp3/Response;
iget-object v0, p1, Lokhttp3/Response;->cacheResponse:Lokhttp3/Response;
iput-object v0, p0, Lokhttp3/Response$Builder;->cacheResponse:Lokhttp3/Response;
iget-object v0, p1, Lokhttp3/Response;->priorResponse:Lokhttp3/Response;
iput-object v0, p0, Lokhttp3/Response$Builder;->priorResponse:Lokhttp3/Response;
iget-wide v0, p1, Lokhttp3/Response;->sentRequestAtMillis:J
iput-wide v0, p0, Lokhttp3/Response$Builder;->sentRequestAtMillis:J
iget-wide v0, p1, Lokhttp3/Response;->receivedResponseAtMillis:J
iput-wide v0, p0, Lokhttp3/Response$Builder;->receivedResponseAtMillis:J
return-void
